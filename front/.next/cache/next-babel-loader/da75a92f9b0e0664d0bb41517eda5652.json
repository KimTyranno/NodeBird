{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  console.log(\"테스트\", data);\n  {\n    type: \"LOG_IN\", data;\n  }\n};\nexport const logoutAction = data => {\n  {\n    type: \"LOG_OUT\";\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"뭐임?\", action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/study/Inflearn/react-nodebird/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","console","log","type","logoutAction","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB;AAYA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;AACA;AACEG,IAAAA,IAAI,EAAE,UAAUH,IAAV;AACP;AACF,CALM;AAMP,OAAO,MAAMI,YAAY,GAAIJ,IAAD,IAAU;AACpC;AACEG,IAAAA,IAAI,EAAE;AACP;AACF,CAJM;;AAKP,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKZ,OAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,MAAnB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AACF,SAAK,QAAL;AACE,6CACKF,KADL;AAEEb,QAAAA,IAAI,kCACCa,KAAK,CAACb,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFD,UAAAA,IAAI,EAAEc,MAAM,CAACP;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKM,KADL;AAEEb,QAAAA,IAAI,kCACCa,KAAK,CAACb,IADP;AAEFC,UAAAA,UAAU,EAAE,KAFV;AAGFD,UAAAA,IAAI,EAAE;AAHJ;AAFN;;AAQF;AACE,aAAOa,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nconst initialState = {\r\n  user: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n  },\r\n  post: {\r\n    mainPosts: [],\r\n  },\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  console.log(\"테스트\", data);\r\n  {\r\n    type: \"LOG_IN\", data;\r\n  }\r\n};\r\nexport const logoutAction = (data) => {\r\n  {\r\n    type: \"LOG_OUT\";\r\n  }\r\n};\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      console.log(\"뭐임?\", action);\r\n      return { ...state, ...action.payload };\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: true,\r\n          user: action.data,\r\n        },\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}