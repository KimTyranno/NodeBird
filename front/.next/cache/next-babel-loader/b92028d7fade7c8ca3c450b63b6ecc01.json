{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"D:\\\\study\\\\Inflearn\\\\react-nodebird\\\\front\\\\components\\\\LoginForm.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/Link\";\nimport { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\"; // div태그면서 css를 적용시킴\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n\"])));\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      Id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      Password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // 컴포넌트의 props로 넘겨주는 함수는 useCallback을 쓰면 최적화가 된다\n\n\n  var onSubmitForm = useCallback(function () {\n    console.log(Id, Password);\n    setIsLoggedIn(true);\n  }, [Id, Password]);\n  return (\n    /*#__PURE__*/\n    // onFinish에는 e.preventDefault가 적용되어있으므로 그 처리를 안해도된다.\n    _jsxDEV(FormWrapper, {\n      onFinish: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: Id,\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: Password,\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(LoginForm, \"QHFFvNAvtu7xDJ1aQMl1cQ+ea00=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c3 = LoginForm;\nLoginForm.proTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["D:/study/Inflearn/react-nodebird/front/components/LoginForm.js"],"names":["Button","Form","Input","Link","useCallback","useState","styled","PropTypes","useInput","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","Id","onChangeId","Password","onChangePassword","onSubmitForm","console","log","proTypes","func","isRequired"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CACA;;;AACA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV,4FAAnB;KAAMD,a;AAIN,IAAME,WAAW,GAAGL,MAAM,CAACL,IAAD,CAAT,2FAAjB;MAAMU,W;;AAGN,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAuB;AAAA;;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBACdL,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,MAChCM,EADgC;AAAA,MAC5BC,UAD4B;;AAAA,mBAEFP,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAEhCQ,QAFgC;AAAA,MAEtBC,gBAFsB,kBAIvC;;;AACA,MAAMC,YAAY,GAAGd,WAAW,CAAC,YAAM;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAgBE,QAAhB;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAH+B,EAG7B,CAACC,EAAD,EAAKE,QAAL,CAH6B,CAAhC;AAIA;AAAA;AACE;AACA,YAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE,YAAvB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAEJ,EAA7B;AAAiC,UAAA,QAAQ,EAAEC,UAA3C;AAAuD,UAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAME;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,eADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAEC,QAHT;AAIE,UAAA,QAAQ,EAAEC,gBAJZ;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAyBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAKE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA,iCACE;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBALF;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBF,eAoCE;AAAA;AAAA;AAAA;AAAA,eApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAyCD,CAlDD;;GAAML,S;UACqBJ,Q,EACYA,Q;;;MAFjCI,S;AAoDNA,SAAS,CAACS,QAAV,GAAqB;AACnBR,EAAAA,aAAa,EAAEN,SAAS,CAACe,IAAV,CAAeC;AADX,CAArB;AAGA,eAAeX,SAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport Link from \"next/Link\";\r\nimport { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport useInput from \"../hooks/useInput\";\r\n// div태그면서 css를 적용시킴\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n  const [Id, onChangeId] = useInput(\"\");\r\n  const [Password, onChangePassword] = useInput(\"\");\r\n\r\n  // 컴포넌트의 props로 넘겨주는 함수는 useCallback을 쓰면 최적화가 된다\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(Id, Password);\r\n    setIsLoggedIn(true);\r\n  }, [Id, Password]);\r\n  return (\r\n    // onFinish에는 e.preventDefault가 적용되어있으므로 그 처리를 안해도된다.\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">아이디</label>\r\n        <br />\r\n        <Input name=\"user-id\" value={Id} onChange={onChangeId} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={Password}\r\n          onChange={onChangePassword}\r\n          required\r\n        />\r\n      </div>\r\n      {/* \r\n        태그에다가 직접 스타일을 지정하면 \r\n        리액트의 virtualDom이 리렌더링 시켜버리니까 (직접 스타일을 지정한 부분만\r\n        Styled-components를 쓰면된다. \r\n        \r\n        성능에 크게 문제가 없으면 그냥 인라인으로 써도됨.\r\n        styled-components로 쓰면 최적화할때 좋다.\r\n      */}\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\r\n          로그인\r\n        </Button>\r\n        {/* href는 Link에 넣는게 좋고, a태그에는 안넣는게 좋다  */}\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>회원가입</Button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n      <div></div>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nLoginForm.proTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n};\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}