{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Inflearn\\\\react-nodebird\\\\front\\\\pages\\\\_app.js\",\n    _this = this;\n\nimport PropTypes from \"prop-types\";\nimport \"antd/dist/antd.css\";\nimport Head from \"next/head\";\nimport wrapper from \"../store/configureStore\"; //페이지에서 공통되는걸 처리하는 파일임\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component;\n  return (\n    /*#__PURE__*/\n    // next redux에서는 자동으로 provider로 감싸주기때문에\n    // 원래 redux를 적용하듯이 최상위에서 provider로 감싸줄 필요가 없다.\n    // 감싸주면 오히려 중복이 되어 에러발생\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          charSet: \"utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"NodeBird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true)\n  );\n};\n\n_c = NodeBird;\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\nexport default _c2 = wrapper.withRedux(NodeBird);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NodeBird\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/study/Inflearn/react-nodebird/front/pages/_app.js"],"names":["PropTypes","Head","wrapper","NodeBird","Component","propTypes","elementType","isRequired","withRedux"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAClC;AAAA;AACE;AACA;AACA;AACA;AAAA,8BAEE,QAAC,IAAD;AAAA,gCACE;AAAM,UAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAJF;AAaD,CAdD;;KAAMD,Q;AAgBNA,QAAQ,CAACE,SAAT,GAAqB;AACnBD,EAAAA,SAAS,EAAEJ,SAAS,CAACM,WAAV,CAAsBC;AADd,CAArB;AAGA,qBAAeL,OAAO,CAACM,SAAR,CAAkBL,QAAlB,CAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport \"antd/dist/antd.css\";\r\nimport Head from \"next/head\";\r\nimport wrapper from \"../store/configureStore\";\r\n//페이지에서 공통되는걸 처리하는 파일임\r\nconst NodeBird = ({ Component }) => {\r\n  return (\r\n    // next redux에서는 자동으로 provider로 감싸주기때문에\r\n    // 원래 redux를 적용하듯이 최상위에서 provider로 감싸줄 필요가 없다.\r\n    // 감싸주면 오히려 중복이 되어 에러발생\r\n    <>\r\n      {/* head컴포넌트가 따로 있어서 head에 원하는 정보를 넣을 수 있다. */}\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>NodeBird</title>\r\n      </Head>\r\n      <Component />\r\n    </>\r\n  );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n};\r\nexport default wrapper.withRedux(NodeBird);\r\n"]},"metadata":{},"sourceType":"module"}