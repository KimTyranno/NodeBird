{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  // 로그인 시도중 (로딩창 띄우기위함)\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOG_IN_REQUEST\",\n    data: data\n  };\n}; // loginSuccessAction, loginFailureAction, logoutSuccessAction, logoutFailureAction은 saga에서 호출하므로 안써도됨\n\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: \"LOG_OUT_REQUEST\"\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOG_IN_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        isLoggingIn: false,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"Tyranno!!\"\n        })\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        isLoggingIn: false\n      });\n\n    case \"LOG_OUT_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        isLoggingOut: false,\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/study/Inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isLoggingOut","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","nickname"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,WAAW,EAAE,KAFa;AAEN;AACpBC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,IAAD,EAAU;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAKP,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBZ,YAAyB;AAAA,MAAXa,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,gBAAL;AACE,6CACKG,KADL;AAEEX,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAK,gBAAL;AACE,6CACKW,KADL;AAEEX,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEE,QAAAA,EAAE,kCAAOS,MAAM,CAACL,IAAd;AAAoBM,UAAAA,QAAQ,EAAE;AAA9B;AAJJ;;AAMF,SAAK,gBAAL;AACE,6CACKF,KADL;AAEEX,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAK,iBAAL;AACE,6CACKU,KADL;AAEET,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAK,iBAAL;AACE,6CACKS,KADL;AAEEX,QAAAA,UAAU,EAAE,KAFd;AAGEE,QAAAA,YAAY,EAAE,KAHhB;AAIEC,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAK,iBAAL;AACE,6CACKQ,KADL;AAEET,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOS,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  isLoggedIn: false,\r\n  isLoggingIn: false, // 로그인 시도중 (로딩창 띄우기위함)\r\n  isLoggingOut: false, // 로그아웃 시도중\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_REQUEST\",\r\n    data,\r\n  };\r\n};\r\n// loginSuccessAction, loginFailureAction, logoutSuccessAction, logoutFailureAction은 saga에서 호출하므로 안써도됨\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_REQUEST\",\r\n  };\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n    case \"LOG_IN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoggingIn: false,\r\n        me: { ...action.data, nickname: \"Tyranno!!\" },\r\n      };\r\n    case \"LOG_IN_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isLoggingIn: false,\r\n      };\r\n    case \"LOG_OUT_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    case \"LOG_OUT_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isLoggingOut: false,\r\n        me: null,\r\n      };\r\n    case \"LOG_OUT_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}