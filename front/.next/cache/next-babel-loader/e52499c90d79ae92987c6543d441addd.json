{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from \"shortid\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"티라노\"\n    },\n    content: \"첫글임 #해시태그임 #언제배우냐\",\n    Images: [{\n      src: \"https://images.unsplash.com/photo-1541963463532-d68292c34b19?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JlLWZlZWR8M3x8fGVufDB8fHw%3D&w=1000&q=80\"\n    }, {\n      src: \"https://static.toiimg.com/photo/72975551.cms\"\n    }, {\n      src: \"https://www.gettyimages.com/gi-resources/images/500px/983794168.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        nickname: \"네로\"\n      },\n      content: \"개정판나옴\"\n    }, {\n      User: {\n        nickname: \"히어로\"\n      },\n      content: \"자고싶다.\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"티란오\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"티란오\"\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      const postIndex = state.mainPosts.findIndex(y => y.id === action.data.postId);\n\n      const post = _objectSpread({}, state.mainPosts[postIndex]);\n\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/study/Inflearn/react-nodebird/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","y","postId","post"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: { id: 1, nickname: \"티라노\" },\r\n      content: \"첫글임 #해시태그임 #언제배우냐\",\r\n      Images: [\r\n        {\r\n          src:\r\n            \"https://images.unsplash.com/photo-1541963463532-d68292c34b19?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JlLWZlZWR8M3x8fGVufDB8fHw%3D&w=1000&q=80\",\r\n        },\r\n        {\r\n          src: \"https://static.toiimg.com/photo/72975551.cms\",\r\n        },\r\n        {\r\n          src:\r\n            \"https://www.gettyimages.com/gi-resources/images/500px/983794168.jpg\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            nickname: \"네로\",\r\n          },\r\n          content: \"개정판나옴\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"히어로\",\r\n          },\r\n          content: \"자고싶다.\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\nconst dummyPost = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"티란오\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"티란오\",\r\n  },\r\n});\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: null,\r\n      };\r\n    case ADD_COMMENT_SUCCESS:\r\n      const postIndex = state.mainPosts.findIndex(\r\n        (y) => y.id === action.data.postId\r\n      );\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}